{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, COMMENT } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    // dispatch({type: END_LOADING});\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    history.push(`/posts/${data._id}`);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    dispatch({\n      type: 'COMMENT',\n      payload: data\n    });\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","START_LOADING","END_LOADING","CREATE","UPDATE","DELETE","COMMENT","api","getPost","id","dispatch","type","data","fetchPost","payload","error","console","log","getPosts","page","currentPage","numberOfPages","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","history","push","_id","updatePost","likePost","commentPost","value","comment","comments","deletePost"],"sources":["C:/Users/Dell/Desktop/memories-project/client/src/actions/posts.js"],"sourcesContent":["import {FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, COMMENT} from '../constants/actionTypes';\r\n\r\nimport * as api from '../api/index.js'\r\n\r\nexport const getPost = (id) => async (dispatch) => { \r\n    try {\r\n        dispatch({type: START_LOADING});\r\n        const {data} = await api.fetchPost(id);\r\n\r\n        dispatch({type: FETCH_POST, payload: data});\r\n        // dispatch({type: END_LOADING});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n};\r\n\r\nexport const getPosts = (page) => async (dispatch) => { \r\n    try {\r\n        dispatch({type: START_LOADING});\r\n        const {data: {data, currentPage, numberOfPages}} = await api.fetchPosts(page);\r\n\r\n        dispatch({type: FETCH_ALL, payload: {data, currentPage, numberOfPages}});\r\n        dispatch({type: END_LOADING});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n};\r\n\r\nexport const getPostsBySearch = (searchQuery) => async(dispatch) => {\r\n    try {\r\n        dispatch({type: START_LOADING});\r\n        const {data: {data}} = await api.fetchPostsBySearch(searchQuery);\r\n\r\n        dispatch ({type: FETCH_BY_SEARCH, payload: data});\r\n        dispatch({type: END_LOADING});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost = (post, history) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: START_LOADING});\r\n       const {data} = await api.createPost(post);\r\n\r\n       history.push(`/posts/${data._id}`);\r\n       \r\n       dispatch({type: CREATE, payload: data});\r\n       dispatch({type: END_LOADING});\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.updatePost(id, post);\r\n\r\n        dispatch({type: UPDATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.likePost(id);\r\n\r\n        dispatch({type: UPDATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const commentPost = (value, id) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.comment(value, id);\r\n\r\n        dispatch({type: 'COMMENT', payload: data});\r\n\r\n        return data.comments;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({type: DELETE, payload: id})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}