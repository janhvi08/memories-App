{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = p => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","FETCH_BY_SEARCH","START_LOADING","END_LOADING","CREATE","UPDATE","DELETE","api","getPost","p","dispatch","type","data","fetchPosts","page","payload","error","console","log","getPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["C:/Users/Dell/Desktop/memories-project/client/src/actions/posts.js"],"sourcesContent":["import {FETCH_ALL, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE} from '../constants/actionTypes';\r\n\r\nimport * as api from '../api/index.js'\r\n\r\nexport const getPost = (p) => async (dispatch) => { \r\n    try {\r\n        dispatch({type: START_LOADING});\r\n        const {data} = await api.fetchPosts(page);\r\n\r\n        dispatch({type: FETCH_ALL, payload: data});\r\n        dispatch({type: END_LOADING});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n};\r\n\r\nexport const getPosts = (page) => async (dispatch) => { \r\n    try {\r\n        dispatch({type: START_LOADING});\r\n        const {data} = await api.fetchPosts(page);\r\n\r\n        dispatch({type: FETCH_ALL, payload: data});\r\n        dispatch({type: END_LOADING});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n};\r\n\r\nexport const getPostsBySearch = (searchQuery) => async(dispatch) => {\r\n    try {\r\n        dispatch({type: START_LOADING});\r\n        const {data: {data}} = await api.fetchPostsBySearch(searchQuery);\r\n\r\n        dispatch ({type: FETCH_BY_SEARCH, payload: data});\r\n        dispatch({type: END_LOADING});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: START_LOADING});\r\n       const {data} = await api.createPost(post);\r\n       \r\n       dispatch({type: CREATE, payload: data});\r\n       dispatch({type: END_LOADING});\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.updatePost(id, post);\r\n\r\n        dispatch({type: UPDATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({type: DELETE, payload: id})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.likePost(id);\r\n\r\n        dispatch({type: UPDATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}